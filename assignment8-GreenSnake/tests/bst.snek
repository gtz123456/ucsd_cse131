(fun (generate_node val left right) (tuple val left right))
(fun (element_in_the_tree head val)
    (let ((node head))
        (loop
            (if (= val (index node 0))
                (break true)
                (if (> val (index node 0))
                    (if (index node 2)
                        (set! node (index node 2))
                        (break false)
                    )
                    (if (index node 1)
                        (set! node (index node 1))
                        (break false)
                    )
                )
            )
        )
    )
)

(fun (add node val)
    (if (> val (index node 0))
        (if (index node 2)
            (add (index node 2) val)
            (settuple! node 2 (generate_node val false false))
        )
        (if (index node 1)
            (add (index node 1) val)
            (settuple! node 1 (generate_node val false false))
        )
    )
)

(let ((head (generate_node 12 false false)))
    (block
        (add head 9)
        (add head 5)
        (add head 15)
        (add head 18)
        (add head 17)
        (print (element_in_the_tree head 5))
        (print (element_in_the_tree head 9))
        (print (element_in_the_tree head 17))
        (element_in_the_tree head 999)
    )
)