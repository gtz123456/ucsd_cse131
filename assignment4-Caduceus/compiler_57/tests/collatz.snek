(let 
    (
        (n input)
        (counter 1)
    )
    (if (= n 0)
        0 
        (block 
            (if (< n 0) (set! n (* n -1)) (set! n n))
            (loop
                (if (= n 1)
                    (break counter)
                    (block 
                        (let 
                            (
                                (c n)
                                (divTemp 0)
                            )
                            (block 
                                (loop (if (>= c 2) (set! c (- c 2)) (break c)))
                                (if (= c 0) 
                                    (block 
                                        (set! c n)
                                        (loop (if (>= c 2) (block (set! c (- c 2)) (set! divTemp (add1 divTemp))) (break divTemp)))
                                        (set! n divTemp)
                                    )
                                    (set! n (+ 1 (* 3 n)))
                                )
                            )
                        )
                        (set! counter (add1 counter))
                    )
                )
            )
        )   
    )
)